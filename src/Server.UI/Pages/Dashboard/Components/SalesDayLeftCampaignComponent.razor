@using CleanArchitecture.Blazor.Server.UI.Components.Shared
@using CleanArchitecture.Blazor.Application.Features.Campaigns.DTOs
@using CleanArchitecture.Blazor.Application.Features.Campaigns.Queries.GetTop3InProgressCampaigns;
@inject IMediator Mediator

<CompositeViewBaseComponent IsBusy="@(campaigns == null)">
    <HeaderView>
        <div class="d-flex justify-space-between align-center">
            <div>
                <p class="fs-30 fw-700">Top Product</p>
                <span class="text-gray fs-14">Information about Sales day Left</span>
            </div>
            <span>
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <path d="M19 3L7 3" stroke="#A7A7A7" stroke-width="2" stroke-linecap="round" />
                    <path d="M3 3L1 3" stroke="#A7A7A7" stroke-width="2" stroke-linecap="round" />
                    <path d="M19 10L17 10" stroke="#A7A7A7" stroke-width="2" stroke-linecap="round" />
                    <path d="M3 17L1 17" stroke="#A7A7A7" stroke-width="2" stroke-linecap="round" />
                    <path d="M13 10L1 10" stroke="#A7A7A7" stroke-width="2" stroke-linecap="round" />
                    <path d="M19 17L7 17" stroke="#A7A7A7" stroke-width="2" stroke-linecap="round" />
                    <path d="M15 12C13.8954 12 13 11.1046 13 10C13 8.89543 13.8954 8 15 8C15.489 8 16.3289 8.39194 16.9397 8.82881C17.8382 9.47137 17.0097 11.0854 16.0808 11.6831C15.7691 11.8837 15.3981 12 15 12Z" stroke="#A7A7A7" stroke-width="2" />
                    <path d="M5 19C3.89543 19 3 18.1046 3 17C3 15.8954 3.89543 15 5 15C6.10457 15 7 15.8954 7 17C7 18.1046 6.10457 19 5 19Z" stroke="#A7A7A7" stroke-width="2" />
                    <path d="M5 5C3.89543 5 3 4.10457 3 3C3 1.89543 3.89543 1 5 1C6.10457 1 7 1.89543 7 3C7 4.10457 6.10457 5 5 5Z" stroke="#A7A7A7" stroke-width="2" />
                </svg>
            </span>
        </div>
    </HeaderView>

    <ChildContent>
        @if (campaigns != null)
        {
            @foreach (var campaign in campaigns)
            {
                <div class="mt-10">
                    <div class="d-flex justify-space-between">
                        <span class="fs-14 fw-600">@campaign.Name</span>
                        <span class="fs-14 fw-600 text-nowrap ms-3">@GetDaysLeft(campaign.EndDate) days left</span>
                    </div>
                    <MudProgressLinear Color="@GetColorForCampaign(campaign)" Size="Size.Medium" Value="@GetProgressValue(campaign)" Class="my-7" />
                    <div class="d-flex justify-end">
                        <p class="fw-600 fs-14">@GetProgressValue(campaign)%</p>
                    </div>
                </div>
            }
        }
    </ChildContent>

    <BusyView>
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    </BusyView>
</CompositeViewBaseComponent>

@code {
    private IEnumerable<CampaignDto> campaigns = null;

    protected override async Task OnInitializedAsync()
    {
        await FetchCampaigns();
    }

    private async Task FetchCampaigns()
    {
        var query = new GetTop3InProgressCampaignsQuery();
        campaigns = await Mediator.Send(query);
    }

    private async Task RefreshData()
    {
        await FetchCampaigns();
    }

    private int GetDaysLeft(DateTime endDate)
    {
        return Math.Max(0, (endDate - DateTime.UtcNow).Days);
    }

    private double GetProgressValue(CampaignDto campaign)
    {
        var totalDays = (campaign.EndDate - campaign.StartDate).TotalDays;
        var daysElapsed = (DateTime.UtcNow - campaign.StartDate).TotalDays;
        return Math.Round(Math.Min(100, Math.Max(0, (daysElapsed / totalDays) * 100)), 2);
    }

    private Color GetColorForCampaign(CampaignDto campaign)
    {
        var progress = GetProgressValue(campaign);
        if (progress < 40) return Color.Tertiary;
        if (progress < 70) return Color.Info;
        return Color.Secondary;
    }
}
<style>
    .text-nowrap{
        text-wrap: nowrap;
    }
</style>