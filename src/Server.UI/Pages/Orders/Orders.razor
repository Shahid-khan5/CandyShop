@page "/orders"

<PageTitle>@Title</PageTitle>

<MudDataGrid FixedHeader="true"
             T="SaleDto"
             FixedFooter="false"
             Height="calc(100vh - 224px)"
             @bind-RowsPerPage="_defaultPageSize"
             Hover="true"
             MultiSelection="true"
             Loading="@_loading"
             ServerData="@(ServerReload)">

    <ToolBarContent>
        <div class="d-flex justify-space-between w-100 align-center">
            <MudText Typo="Typo.h6">Orders</MudText>
        </div>
    </ToolBarContent>
    <Columns>
        <SelectColumn ShowInFooter="false"></SelectColumn>
        <PropertyColumn Property="x => x.Product" Title="Product" />
        <PropertyColumn Property="x => x.OrderID" Title="OrderID" />
        <PropertyColumn Property="x => x.Date" Title="Date">
            <CellTemplate>
                @FormatDate(context.Item.Date)
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.CustomerName" Title="CustomerName" />
        <PropertyColumn Property="x => x.Status" Title="Status" />
        <PropertyColumn Property="x => x.Amount" Title="Amount" />
       @*  <PropertyColumn Property="x => x.UserName" Title="@L[_currentDto.GetMemberDescription(x => x.UserName)]">
            <CellTemplate>
                <div class="d-flex align-items-center">
                    <MudBadge Color="@(IsOnline(context.Item.DisplayName??context.Item.UserName) ? Color.Success : Color.Error)" Overlap="false" Dot="true" Bordered="true">
                        <MudAvatar>
                            @if (string.IsNullOrEmpty(context.Item.ProfilePictureDataUrl))
                            {
                                @context.Item.UserName.First()
                            }
                            else
                            {
                                <MudImage Src="@context.Item.ProfilePictureDataUrl"></MudImage>
                            }
                        </MudAvatar>
                    </MudBadge>
                    <div class="pl-3">
                        <MudText Class="ml-2 align-self-center">@context.Item.UserName</MudText>
                        <MudText Typo="Typo.body2" Class="ml-2 align-self-center mud-text-secondary">@context.Item.Email</MudText>
                    </div>
                </div>
            </CellTemplate>
        </PropertyColumn> *@
    </Columns>
    <PagerContent>
        <MudDataGridPager PageSizeOptions="@(new[] { 10, 15, 30, 50, 100, 500, 1000 })" />
    </PagerContent>
</MudDataGrid>


@code {
    private string Title { get; set; } = "Orders";
    private int _defaultPageSize = 15;
    private bool _loading;
    // private HashSet<ApplicationUserDto> _selectedItems = new();
    // private readonly ApplicationUserDto _currentDto = new();
    // private MudDataGrid<ApplicationUserDto> _table = null!;

    public class SaleDto
    {
        public string Product { get; set; }
        public int OrderID { get; set; }
        public DateTime Date { get; set; }
        public string CustomerName { get; set; }
        public string Status { get; set; }
        public double Amount { get; set; }
    }

    private string FormatDate(DateTime date)
    {
        return date.ToString("MMMM d, yyyy");
    }


    private async Task<GridData<SaleDto>> ServerReload(GridState<SaleDto> state)
    {
        try
        {
            _loading = true;

            var items = new List<SaleDto>
        {
            new SaleDto { Product = "Product A", OrderID = 1, Date = DateTime.Now.AddDays(-1), CustomerName = "John Doe", Status = "Paid", Amount = 100.50 },
            new SaleDto { Product = "Product B", OrderID = 2, Date = DateTime.Now.AddDays(-2), CustomerName = "Jane Smith", Status = "Unpaid", Amount = 200.75 },
            new SaleDto { Product = "Product C", OrderID = 3, Date = DateTime.Now.AddDays(-3), CustomerName = "Mike Johnson", Status = "Inprogress", Amount = 150.00 },
            new SaleDto { Product = "Product D", OrderID = 4, Date = DateTime.Now.AddDays(-4), CustomerName = "Emily Davis", Status = "Paid", Amount = 300.20 },
            new SaleDto { Product = "Product E", OrderID = 5, Date = DateTime.Now.AddDays(-5), CustomerName = "David Wilson", Status = "Unpaid", Amount = 250.60 }
        };
            var total = items.Count;

            return new GridData<SaleDto> { TotalItems = total, Items = items };
        }
        finally
        {
            _loading = false;
        }
    }


}

<style>

    .mud-toolbar.mud-toolbar-gutters.mud-table-toolbar {
        overflow: auto !important;
    }

    .mud-table-toolbar {
        height: 60px !important;
    }

    .w-100 {
        width: 100% !important;
    }

    @@media (max-width: 760px) {
        .mud-table.mud-data-grid.mud-xs-table.mud-table-hover.mud-table-sticky-header.mud-elevation-1 {
            height: calc(100vh - 80px) !important;
        }

        .mud-drawer-close-mini-md-left .mud-main-content {
            margin-left: var(--mud-drawer-width-mini-left);
            scroll-padding-top: auto;
            padding-top: 66px;
        }

        .mud-main-content {
            overflow: hidden !important;
            padding-top: 62px !important;
        }

        .mud-container.mud-container-maxwidth-xl.mud-container--gutters.mt-4 {
            margin: 0 !important;
            margin-top: 10px !important;
        }
    }
</style>
